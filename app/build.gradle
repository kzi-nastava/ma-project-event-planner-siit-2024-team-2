plugins {
    alias(libs.plugins.android.application)
}

def getIpAddress() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("ip_addr");
}

android {
    namespace 'com.example.eventplanner'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.eventplanner"
        minSdk 30
        targetSdk 34
        versionCode 1
        versionName "1.0"
        buildConfigField("String", "IP_ADDR", "\""+getIpAddress()+"\"")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
}

dependencies {
    compileOnly libs.lombok
    annotationProcessor libs.lombok
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.navigation.runtime
    implementation libs.navigation.ui
    implementation libs.navigation.fragment
    implementation libs.retrofit2.retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}